knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
source('./scripts/load.R')
source('./scripts/utilities.R')
source('scripts/logits.R')
require(tidyverse)
require(knitr)
require(Hmisc)
names(d)
model_accuracy_ = d %>%
filter(target_type %in% focal_conditions) %>%
mutate(condition = case_when(target_type == 'semantic' ~ 1, TRUE ~ 0)) %>%
glmer(accuracy  ~ condition + (1 | subnum) + (1 | target_id), family = 'binomial', data = .)
summary(model_accuracy_)
model_accuracy_ = d %>%
filter(target_type %in% focal_conditions) %>%
mutate(condition = case_when(target_type == 'semantic' ~ 1, TRUE ~ 0)) %>%
glmer(accuracy  ~ condition + (1 | subnum) + (1 | target_id), family = 'binomial', data = .)
knitr::opts_chunk$set(echo = TRUE)
packages = read.csv('requirements.txt', header = F)[[1]]
lapply(packages, require, ch = T)
load('./data/data.Rda')
source('./scripts/logits.R')
model_accuracy_ = d %>%
filter(target_type %in% focal_conditions) %>%
mutate(condition = case_when(target_type == 'semantic' ~ 1, TRUE ~ 0)) %>%
glmer(accuracy  ~ condition + (1 | subnum) + (1 | target_id), family = 'binomial', data = .)
knitr::opts_chunk$set(echo = TRUE)
packages = read.csv('requirements.txt', header = F)[[1]]
lapply(packages, require, ch = T)
load('./data/data.Rda')
source('./scripts/logits.R')
model_accuracy_ = d %>%
filter(target_type %in% focal_conditions) %>%
mutate(condition = case_when(target_type == 'semantic' ~ 1, TRUE ~ 0)) %>%
glmer(accuracy  ~ condition + (1 | subnum) + (1 | target_id), family = 'binomial', data = .)
focal_conditions = c('unrelated', 'semantic')
outlier_participants_by_accuracy = c(3, 46)
outlier_targets_by_accuracy = c(16, 19, 93, 94)
high_cutoff_rt = 2742.114
low_cutoff_rt = 300
d = d %>%
mutate(outlier = ifelse(subnum %in% outlier_participants_by_accuracy | target_id %in% outlier_targets_by_accuracy | rt > high_cutoff_rt | rt < low_cutoff_rt, TRUE, FALSE))
d %>%
filter(outlier == F) %>%
group_by(target_type) %>%
summarise(Accuracy = mean(accuracy),
SD = sd(accuracy)) %>%
kable()
focal_conditions = c('unrelated', 'semantic')
model_accuracy = d %>%
filter(outlier == F) %>%
filter(target_type %in% focal_conditions) %>%
mutate(condition = case_when(target_type == 'semantic' ~ 1, TRUE ~ 0)) %>%
glmer(accuracy  ~ condition + (1 | subnum) + (1 | target_id), family = 'binomial', data = .)
summary(model_accuracy)
predictor_probability(model_accuracy, 'condition', return_unit_difference = T)
x = expand.grid(condition = c(0, 1))
y = predictSE(model_accuracy, newdata = x, se.fit = TRUE, type = "response")
predictions = cbind(x, y) %>%
mutate(condition = case_when(condition == 0 ~ 'Unrelated',
TRUE ~ 'Semantic')) %>%
rename(Condition = condition,
Probability = fit,
SE = se.fit)
plot_data = d %>%
filter(outlier == FALSE) %>%
filter(target_type %in% focal_conditions) %>%
group_by(subnum, target_type) %>%
summarise(Probability = mean(accuracy)) %>%
ungroup() %>%
mutate(target_type = recode(target_type, 'semantic' = 'Semantic', 'unrelated' = 'Unrelated')) %>%
rename(Condition = target_type,
Participant = subnum)
COLORS = c('Semantic' = 'firebrick', 'Unrelated' = 'goldenrod')
predictions %>%
ggplot(aes(Condition, Probability, fill = Condition)) +
geom_bar(stat = 'identity', width = .75) +
geom_errorbar(aes(ymin = Probability - SE, ymax = Probability + SE),
width = .2) +
scale_fill_manual(values = COLORS) +
geom_point(data = plot_data, size = .5, color = 'grey26', position = position_jitter(width = .03, height = .02)) +
coord_cartesian(ylim = c(.7, 1.03)) +
labs(y = 'Proportion correct') +
expand_limits(y = 20) +
theme_classic() +
theme(legend.position = 'none')
predictions = cbind(x, y) %>%
mutate(condition = case_when(condition == 0 ~ 'Unrelated',
TRUE ~ 'Semantic')) %>%
rename(Condition = condition,
Probability = fit,
SE = se.fit)
y = predictSE(model_accuracy, newdata = x, se.fit = TRUE, type = "response")
knitr::opts_chunk$set(echo = TRUE)
packages = read.csv('requirements.txt', header = F)[[1]]
lapply(packages, require, ch = T)
load('./data/data.Rda')
source('./scripts/logits.R')
outlier_participants_by_accuracy = c(3, 46)
outlier_targets_by_accuracy = c(16, 19, 93, 94)
high_cutoff_rt = 2742.114
low_cutoff_rt = 300
d = d %>%
mutate(outlier = ifelse(subnum %in% outlier_participants_by_accuracy | target_id %in% outlier_targets_by_accuracy | rt > high_cutoff_rt | rt < low_cutoff_rt, TRUE, FALSE))
d %>%
filter(outlier == F) %>%
group_by(target_type) %>%
summarise(Accuracy = mean(accuracy),
SD = sd(accuracy)) %>%
kable()
focal_conditions = c('unrelated', 'semantic')
model_accuracy = d %>%
filter(outlier == F) %>%
filter(target_type %in% focal_conditions) %>%
mutate(condition = case_when(target_type == 'semantic' ~ 1, TRUE ~ 0)) %>%
glmer(accuracy  ~ condition + (1 | subnum) + (1 | target_id), family = 'binomial', data = .)
summary(model_accuracy)
predictor_probability(model_accuracy, 'condition', return_unit_difference = T)
x = expand.grid(condition = c(0, 1))
y = predictSE(model_accuracy, newdata = x, se.fit = TRUE, type = "response")
predictions = cbind(x, y) %>%
mutate(condition = case_when(condition == 0 ~ 'Unrelated',
TRUE ~ 'Semantic')) %>%
rename(Condition = condition,
Probability = fit,
SE = se.fit)
plot_data = d %>%
filter(outlier == FALSE) %>%
filter(target_type %in% focal_conditions) %>%
group_by(subnum, target_type) %>%
summarise(Probability = mean(accuracy)) %>%
ungroup() %>%
mutate(target_type = recode(target_type, 'semantic' = 'Semantic', 'unrelated' = 'Unrelated')) %>%
rename(Condition = target_type,
Participant = subnum)
COLORS = c('Semantic' = 'firebrick', 'Unrelated' = 'goldenrod')
predictions %>%
ggplot(aes(Condition, Probability, fill = Condition)) +
geom_bar(stat = 'identity', width = .75) +
geom_errorbar(aes(ymin = Probability - SE, ymax = Probability + SE),
width = .2) +
scale_fill_manual(values = COLORS) +
geom_point(data = plot_data, size = .5, color = 'grey26', position = position_jitter(width = .03, height = .02)) +
coord_cartesian(ylim = c(.7, 1.03)) +
labs(y = 'Proportion correct') +
expand_limits(y = 20) +
theme_classic() +
theme(legend.position = 'none')
model_accuracy_ = d %>%
filter(target_type %in% focal_conditions) %>%
mutate(condition = case_when(target_type == 'semantic' ~ 1, TRUE ~ 0)) %>%
glmer(accuracy  ~ condition + (1 | subnum) + (1 | target_id), family = 'binomial', data = .)
model_accuracy_ = d %>%
filter(target_type %in% focal_conditions) %>%
mutate(condition = case_when(target_type == 'semantic' ~ 1, TRUE ~ 0)) %>%
glmer(accuracy  ~ condition + (1 | subnum) + (1 | target_id), family = 'binomial', data = .)
model_accuracy_ = d %>%
filter(target_type %in% focal_conditions) %>%
mutate(condition = case_when(target_type == 'semantic' ~ 1, TRUE ~ 0)) %>%
glmer(accuracy  ~ condition + (1 | subnum) + (1 | target_id), family = 'binomial', data = .)
d %>%
filter(target_type %in% focal_conditions) %>%
mutate(condition = case_when(target_type == 'semantic' ~ 1, TRUE ~ 0))
model_accuracy_ = d %>%
filter(target_type %in% focal_conditions) %>%
mutate(condition = case_when(target_type == 'semantic' ~ 1, TRUE ~ 0)) %>%
glmer(accuracy ~ condition + (1 | subnum) + (1 | target_id), family = 'binomial', data = .)
model_accuracy
summary(model_accuracy)
?lmerControl
